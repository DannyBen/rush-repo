#!/usr/bin/env bash
usage() { 
  printf "Usage:\n"
  if [[ -n "$RUSH_REPO" ]]; then
    printf "  rush [REPO] PACKAGE\n"
  else
    printf "  rush REPO PACKAGE\n"
  fi

  printf "  rush -h | --help\n"
  printf "  rush -v | --version\n"

  if [[ -n "$RUSH_REPO" ]]; then
    printf "\nRUSH_REPO=$RUSH_REPO\n"
  fi

  if $LONG_USAGE; then
    printf "\nParameters:\n"
    printf "  REPO     either a GitHub user or a full URL to any site\n"
    printf "           can be omitted if set in the RUSH_REPO environment variable\n"
    printf "  PACKAGE  a name of a package from the rush repository\n\n"
  fi
}

find_source() {
  if [[ $# == 2 ]]; then
    repo=$1
    pack=$2
  else
    repo=$RUSH_REPO
    pack=$1
  fi

  if [[ $repo =~ ':' ]]; then
    base="$repo"
  else
    base="https://raw.githubusercontent.com/$repo/rush/master"
  fi
}

execute() {
  printf "\nRushing $repo/$pack\n"
  export SELF="$base/$pack"

  wget -qO- $SELF/main | bash
  exitcode=$?

  if [[ "$exitcode" != "0" ]]; then
    echo "Error $exitcode @ $SELF"
  fi
}

attempt_execute() {
  if [[ $# == 0 ]] || ([[ $# == 1 ]] && [[ -z "$RUSH_REPO" ]]); then
    usage
  else
    find_source $@
    execute $@
  fi
}

run() {
  initialize
  case "$1" in
    -h | --help    ) LONG_USAGE=true; usage ;;
    -v | --version ) echo $VERSION ;;
    * ) attempt_execute $@ ;;
  esac
}

initialize() {
  VERSION="0.1.1"
  LONG_USAGE=false
  set -o pipefail
}

run $@
